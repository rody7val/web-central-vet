extends ../layout.jade
script.
  window.$item = !{ JSON.stringify(item).replace(/<\//g, "<\\/") }

block content
  - const parseObj = (data) => { return JSON.stringify(data, undefined, 2).replace(/<\//g, "<\\/") }
  #container-fluid.col-md-6
    h3#modal-create.modal-title Editar Producto 
      span
        code !{item.title}
    form(onsubmit='editItem(event)')
      //- category
      label Categoria
      select.form-group.form-control.form-input.mr-2(
        name="category"
      )
        option(disabled, selected) Seleccione...
        each category, index in _categories
          option(value=`${category._id}`) !{category.name}
      //- tag
      label Marca
      select.form-group.form-control.form-input.mr-2(
        name="tag"
      )
        option(disabled, selected) Seleccione...
        each tag, index in _tags
          option(value=`${tag._id}`) !{tag.name}
      label Imagen
      div.form-group(style="background-color: #ccc")
        img#preview_item_edit.img-center
        input.form-co_editntrol(
          onchange="onChangeImage(event, 'uploadValue_item_edit', 'urlImg_item_edit', 'preview_item_edit')"
          type="file"
          name="file"
          placeholder="Elije o arrastra una imagen..."
          drop-placeholder="Arrastra una imagen...")
        small.text-muted#uploadValue_item_edit
      input.form-group.form-control(
        id="urlImg_item_edit"
        type="text"
        name="img"
        placeholder="url img"
        disabled)
      label Detalles
      input.form-group.form-control(
        id="title_item_edit"
        type="text"
        name="title"
        placeholder="Nombre del producto"
        required)
      input.form-group.form-control(
        id="desc_item_edit"
        type="text"
        name="desc"
        placeholder="Descripcion"
        required)
      input.form-group.form-control(
        id="price_item_edit"
        type="number"
        name="price"
        placeholder="Precio de venta"
        step="0.05"
        required)
      input.form-group.form-control(
        id="qty_item_edit"
        type="number"
        name="qty"
        placeholder="Cantidad en stock"
        required)
      input#addSubmit_edit.btn.btn-primary(type="submit",value="Guardar")
  script.
    document.getElementById("preview_item_edit").setAttribute("src", !{parseObj(item.img || "")} )
    document.getElementById("urlImg_item_edit").value = !{parseObj(item.img || "")} 
    document.getElementById("title_item_edit").value = !{parseObj(item.title)}
    document.getElementById("desc_item_edit").value = !{parseObj(item.desc)}
    document.getElementById("price_item_edit").value = !{parseObj(item.price)}
    document.getElementById("qty_item_edit").value = !{parseObj(item.qty)}

    const editItem = (event) => {
      event.preventDefault()
      // handle btn submit
      document.getElementById("addSubmit_edit").value = "cargando..."
      document.getElementById("addSubmit_edit").setAttribute("disabled", true)

      let item = {
        category: event.target.category.value,
        img: event.target.img.value,
        title: event.target.title.value,
        desc: event.target.desc.value,
        price: Number(event.target.price.value),
        qty: Number(event.target.qty.value),
        tag: event.target.tag.value
      }

      fetch(`/api/items/!{item._id}/edit`, {
        method: 'POST',
        body: JSON.stringify(item),
        headers:{
          'Content-Type': 'application/json'
        }
      })
      .then(res => {
        return res.json()
      })
      .then(res => {
        if (res.success) {
          alert("Producto editado!")
          return window.location.replace("/")
        }
        alert("res", res)
      })
      .catch(err => {
        alert("err", err)
      })

    }